// Code generated by protoc-gen-go. DO NOT EDIT.
// source: schema.proto

package main

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Schema struct {
	Description string `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	MinLength   uint64 `protobuf:"varint,11,opt,name=min_length,json=minLength,proto3" json:"min_length,omitempty"`
	MaxLength   uint64 `protobuf:"varint,12,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	MinItems    uint64 `protobuf:"varint,13,opt,name=min_items,json=minItems,proto3" json:"min_items,omitempty"`
	MaxItems    uint64 `protobuf:"varint,14,opt,name=max_items,json=maxItems,proto3" json:"max_items,omitempty"`
	// Types that are valid to be assigned to Rule:
	//	*Schema_Ref
	//	*Schema_Pattern
	//	*Schema_Min
	//	*Schema_Max
	//	*Schema_Range_
	Rule                 isSchema_Rule `protobuf_oneof:"rule"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Schema) Reset()         { *m = Schema{} }
func (m *Schema) String() string { return proto.CompactTextString(m) }
func (*Schema) ProtoMessage()    {}
func (*Schema) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{0}
}

func (m *Schema) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schema.Unmarshal(m, b)
}
func (m *Schema) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schema.Marshal(b, m, deterministic)
}
func (m *Schema) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schema.Merge(m, src)
}
func (m *Schema) XXX_Size() int {
	return xxx_messageInfo_Schema.Size(m)
}
func (m *Schema) XXX_DiscardUnknown() {
	xxx_messageInfo_Schema.DiscardUnknown(m)
}

var xxx_messageInfo_Schema proto.InternalMessageInfo

func (m *Schema) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Schema) GetMinLength() uint64 {
	if m != nil {
		return m.MinLength
	}
	return 0
}

func (m *Schema) GetMaxLength() uint64 {
	if m != nil {
		return m.MaxLength
	}
	return 0
}

func (m *Schema) GetMinItems() uint64 {
	if m != nil {
		return m.MinItems
	}
	return 0
}

func (m *Schema) GetMaxItems() uint64 {
	if m != nil {
		return m.MaxItems
	}
	return 0
}

type isSchema_Rule interface {
	isSchema_Rule()
}

type Schema_Ref struct {
	Ref string `protobuf:"bytes,1,opt,name=ref,proto3,oneof"`
}

type Schema_Pattern struct {
	Pattern string `protobuf:"bytes,2,opt,name=pattern,proto3,oneof"`
}

type Schema_Min struct {
	Min int64 `protobuf:"varint,4,opt,name=min,proto3,oneof"`
}

type Schema_Max struct {
	Max int64 `protobuf:"varint,5,opt,name=max,proto3,oneof"`
}

type Schema_Range_ struct {
	Range *Schema_Range `protobuf:"bytes,6,opt,name=range,proto3,oneof"`
}

func (*Schema_Ref) isSchema_Rule() {}

func (*Schema_Pattern) isSchema_Rule() {}

func (*Schema_Min) isSchema_Rule() {}

func (*Schema_Max) isSchema_Rule() {}

func (*Schema_Range_) isSchema_Rule() {}

func (m *Schema) GetRule() isSchema_Rule {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (m *Schema) GetRef() string {
	if x, ok := m.GetRule().(*Schema_Ref); ok {
		return x.Ref
	}
	return ""
}

func (m *Schema) GetPattern() string {
	if x, ok := m.GetRule().(*Schema_Pattern); ok {
		return x.Pattern
	}
	return ""
}

func (m *Schema) GetMin() int64 {
	if x, ok := m.GetRule().(*Schema_Min); ok {
		return x.Min
	}
	return 0
}

func (m *Schema) GetMax() int64 {
	if x, ok := m.GetRule().(*Schema_Max); ok {
		return x.Max
	}
	return 0
}

func (m *Schema) GetRange() *Schema_Range {
	if x, ok := m.GetRule().(*Schema_Range_); ok {
		return x.Range
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Schema) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Schema_Ref)(nil),
		(*Schema_Pattern)(nil),
		(*Schema_Min)(nil),
		(*Schema_Max)(nil),
		(*Schema_Range_)(nil),
	}
}

type Schema_Range struct {
	Min                  int64    `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max                  int64    `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Schema_Range) Reset()         { *m = Schema_Range{} }
func (m *Schema_Range) String() string { return proto.CompactTextString(m) }
func (*Schema_Range) ProtoMessage()    {}
func (*Schema_Range) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{0, 0}
}

func (m *Schema_Range) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schema_Range.Unmarshal(m, b)
}
func (m *Schema_Range) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schema_Range.Marshal(b, m, deterministic)
}
func (m *Schema_Range) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schema_Range.Merge(m, src)
}
func (m *Schema_Range) XXX_Size() int {
	return xxx_messageInfo_Schema_Range.Size(m)
}
func (m *Schema_Range) XXX_DiscardUnknown() {
	xxx_messageInfo_Schema_Range.DiscardUnknown(m)
}

var xxx_messageInfo_Schema_Range proto.InternalMessageInfo

func (m *Schema_Range) GetMin() int64 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *Schema_Range) GetMax() int64 {
	if m != nil {
		return m.Max
	}
	return 0
}

var E_JsonSchema = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*Schema)(nil),
	Field:         51000,
	Name:          "main.json_schema",
	Tag:           "bytes,51000,opt,name=json_schema",
	Filename:      "schema.proto",
}

func init() {
	proto.RegisterType((*Schema)(nil), "main.Schema")
	proto.RegisterType((*Schema_Range)(nil), "main.Schema.Range")
	proto.RegisterExtension(E_JsonSchema)
}

func init() { proto.RegisterFile("schema.proto", fileDescriptor_1c5fb4d8cc22d66a) }

var fileDescriptor_1c5fb4d8cc22d66a = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0xdf, 0x4a, 0xc3, 0x30,
	0x14, 0x87, 0xd7, 0xb5, 0xab, 0xee, 0x74, 0xca, 0xc8, 0x55, 0x98, 0x0c, 0x8a, 0x57, 0x45, 0x21,
	0x03, 0xbd, 0xf3, 0xd2, 0x0b, 0x99, 0x20, 0x0a, 0xf5, 0x01, 0x46, 0xb6, 0x65, 0x5d, 0xa4, 0x49,
	0x4a, 0x9a, 0x41, 0x9e, 0xc2, 0xe7, 0xf1, 0x5d, 0x7c, 0x19, 0xc9, 0x9f, 0xca, 0xee, 0x92, 0xef,
	0xfb, 0x9d, 0xc3, 0xe1, 0x1c, 0x98, 0xf5, 0xbb, 0x23, 0x13, 0x94, 0x74, 0x5a, 0x19, 0x85, 0x32,
	0x41, 0xb9, 0x5c, 0x94, 0x8d, 0x52, 0x4d, 0xcb, 0x56, 0x9e, 0x6d, 0x4f, 0x87, 0xd5, 0x9e, 0xf5,
	0x3b, 0xcd, 0x3b, 0xa3, 0x74, 0xc8, 0xdd, 0xfe, 0x8e, 0x21, 0xff, 0xf4, 0x85, 0xa8, 0x84, 0x62,
	0xd0, 0x5c, 0x49, 0x0c, 0x65, 0x52, 0x4d, 0xeb, 0x73, 0x84, 0x96, 0x00, 0x82, 0xcb, 0x4d, 0xcb,
	0x64, 0x63, 0x8e, 0xb8, 0x28, 0x93, 0x2a, 0xab, 0xa7, 0x82, 0xcb, 0x37, 0x0f, 0xbc, 0xa6, 0x76,
	0xd0, 0xb3, 0xa8, 0xa9, 0x8d, 0xfa, 0x06, 0x5c, 0x76, 0xc3, 0x0d, 0x13, 0x3d, 0xbe, 0xf2, 0xf6,
	0x52, 0x70, 0xf9, 0xea, 0xfe, 0x5e, 0x52, 0x1b, 0xe5, 0x75, 0x94, 0xd4, 0x06, 0x89, 0x20, 0xd5,
	0xec, 0x80, 0x13, 0x37, 0xd1, 0x7a, 0x54, 0xbb, 0x0f, 0x5a, 0xc0, 0x45, 0x47, 0x8d, 0x61, 0x5a,
	0xe2, 0x71, 0xe4, 0x03, 0x70, 0x79, 0xc1, 0x25, 0xce, 0xca, 0xa4, 0x4a, 0x5d, 0x5e, 0xf0, 0xc0,
	0xa8, 0xc5, 0x93, 0x7f, 0x46, 0x2d, 0xba, 0x83, 0x89, 0xa6, 0xb2, 0x61, 0x38, 0x2f, 0x93, 0xaa,
	0x78, 0x40, 0xc4, 0x2d, 0x8d, 0x84, 0x75, 0x90, 0xda, 0x99, 0xf5, 0xa8, 0x0e, 0x91, 0xc5, 0x3d,
	0x4c, 0x3c, 0x41, 0xf3, 0xd0, 0xdc, 0x0d, 0x93, 0x86, 0xd6, 0xf3, 0xd0, 0x7a, 0x1c, 0x09, 0xb5,
	0xcf, 0x39, 0x64, 0xfa, 0xd4, 0xb2, 0xa7, 0x77, 0x28, 0xbe, 0x7a, 0x25, 0x37, 0xe1, 0x34, 0x68,
	0x49, 0xc2, 0x3d, 0xc8, 0x70, 0x0f, 0xf2, 0xc2, 0x59, 0xbb, 0xff, 0xf0, 0xdb, 0xed, 0xf1, 0xcf,
	0x77, 0xea, 0xe7, 0x98, 0x9d, 0xcf, 0x51, 0x83, 0xeb, 0x10, 0xde, 0xdb, 0xdc, 0x17, 0x3e, 0xfe,
	0x05, 0x00, 0x00, 0xff, 0xff, 0xab, 0x40, 0x10, 0xe1, 0xec, 0x01, 0x00, 0x00,
}
